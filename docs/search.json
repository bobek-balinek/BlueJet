{"Structs/Transaction/Flags.html#/s:vVV7BlueJet11Transaction5Flags8rawValueVs5Int32":{"name":"rawValue","abstract":"<p>Raw value</p>","parent_name":"Flags"},"Structs/Transaction/Flags.html#/s:FVV7BlueJet11Transaction5FlagscFT8rawValueVs5Int32_S1_":{"name":"init(rawValue:)","abstract":"<p>Initialise with LMDB</p>","parent_name":"Flags"},"Structs/Transaction/Flags.html#/s:ZvVV7BlueJet11Transaction5Flags8readOnlyS1_":{"name":"readOnly","abstract":"<p>read-only mode</p>","parent_name":"Flags"},"Structs/Transaction/Flags.html":{"name":"Flags","abstract":"<p>Transaction flags</p>","parent_name":"Transaction"},"Structs/Transaction.html#/s:FV7BlueJet11Transaction3runFzT7closureFzS0_T__T_":{"name":"run(closure:)","abstract":"<p>Run transaction with given block</p>","parent_name":"Transaction"},"Structs/Transaction.html#/s:FV7BlueJet11Transaction5resetFT_T_":{"name":"reset()","abstract":"<p>Reset read-only transaction</p>","parent_name":"Transaction"},"Structs/Transaction.html#/s:FV7BlueJet11Transaction5abortFT_T_":{"name":"abort()","abstract":"<p>Abort given transaction</p>","parent_name":"Transaction"},"Structs/Transaction.html#/s:FV7BlueJet11Transaction5renewFT_T_":{"name":"renew()","abstract":"<p>Renew a read-only transaction</p>","parent_name":"Transaction"},"Structs/Transaction.html":{"name":"Transaction","abstract":"<p>Transaction</p>"},"Protocols/Slice.html#/s:FP7BlueJet5Slice5sliceurFzFzVs22UnsafeRawBufferPointerqd__qd__":{"name":"slice(_:)","abstract":"<p>Transform to given type using pointer/bytes transformation block</p>","parent_name":"Slice"},"Protocols/Slice.html#/s:FP7BlueJet5Slice4dataFT_V10Foundation4Data":{"name":"data()","abstract":"<p>Return Data instance</p>","parent_name":"Slice"},"Protocols/Slice.html":{"name":"Slice","abstract":"<p>Slice protocol</p>"},"Extensions/String.html#/s:FE7BlueJetSS5sliceurFzFzVs22UnsafeRawBufferPointerxx":{"name":"slice(_:)","abstract":"<p>Transform to given type using pointer/bytes transformation block</p>","parent_name":"String"},"Extensions/String.html#/s:FE7BlueJetSS4dataFT_V10Foundation4Data":{"name":"data()","abstract":"<p>Return Data instance</p>","parent_name":"String"},"Extensions/Data.html#/s:FE7BlueJetV10Foundation4Data5sliceurFzFzVs22UnsafeRawBufferPointerxx":{"name":"slice(_:)","abstract":"<p>Transform to given type using pointer/bytes transformation block</p>","parent_name":"Data"},"Extensions/Data.html#/s:FE7BlueJetV10Foundation4Data4dataFT_S1_":{"name":"data()","abstract":"<p>Return Data instance</p>","parent_name":"Data"},"Extensions/Data.html#/s:FE7BlueJetV10Foundation4DatacFT4dataVs22UnsafeRawBufferPointer_GSqS1__":{"name":"init(data:)","abstract":"<p>Initialise with a in-memory pointer</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Extensions/String.html":{"name":"String"},"Enums/DBError.html#/s:FO7BlueJet7DBError9keyExistsFMS0_S0_":{"name":"keyExists","abstract":"<p>key/data pair already exists</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError8notFoundFMS0_S0_":{"name":"notFound","abstract":"<p>key/data pair not found (EOF)</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError12pageNotFoundFMS0_S0_":{"name":"pageNotFound","abstract":"<p>Requested page not found - this usually indicates corruption</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError9corruptedFMS0_S0_":{"name":"corrupted","abstract":"<p>Located page was wrong type</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError5panicFMS0_S0_":{"name":"panic","abstract":"<p>Update of meta page failed or environment had fatal error</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError15versionMismatchFMS0_S0_":{"name":"versionMismatch","abstract":"<p>Environment version mismatch</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7invalidFMS0_S0_":{"name":"invalid","abstract":"<p>File is not a valid LMDB file</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7mapFullFMS0_S0_":{"name":"mapFull","abstract":"<p>Environment mapsize reached</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7dbsFullFMS0_S0_":{"name":"dbsFull","abstract":"<p>Environment maxdbs reached</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError11readersFullFMS0_S0_":{"name":"readersFull","abstract":"<p>Environment maxreaders reached</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7tlsFullFMS0_S0_":{"name":"tlsFull","abstract":"<p>Too many TLS keys in use - Windows only</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7txnFullFMS0_S0_":{"name":"txnFull","abstract":"<p>Txn has too many dirty pages</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError10cursorFullFMS0_S0_":{"name":"cursorFull","abstract":"<p>Cursor stack too deep - internal error</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError8pageFullFMS0_S0_":{"name":"pageFull","abstract":"<p>Page has not enough space - internal error</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError10mapResizedFMS0_S0_":{"name":"mapResized","abstract":"<p>Database contents grew beyond environment mapsize</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError12incompatibleFMS0_S0_":{"name":"incompatible","abstract":"<p>Operation and DB incompatible, or DB type changed. This can me</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError13badReaderSlotFMS0_S0_":{"name":"badReaderSlot","abstract":"<p>Invalid reuse of reader locktable slot</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError14badTransactionFMS0_S0_":{"name":"badTransaction","abstract":"<p>Transaction must abort, has a child, or is invalid</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError12badValueSizeFMS0_S0_":{"name":"badValueSize","abstract":"<p>Unsupported size of key/DB name/data, or wrong DUPFIXED size</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError6badDBIFMS0_S0_":{"name":"badDBI","abstract":"<p>The specified DBI was changed unexpectedly</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7problemFMS0_S0_":{"name":"problem","abstract":"<p>Unexpected problem - transaction should abort</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError16invalidParameterFMS0_S0_":{"name":"invalidParameter","abstract":"<p>Invalid Key/Value parameter</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError14outOfDiskSpaceFMS0_S0_":{"name":"outOfDiskSpace","abstract":"<p>Disk has no free space left</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError11outOfMemoryFMS0_S0_":{"name":"outOfMemory","abstract":"<p>Device has run out of memory</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError7ioErrorFMS0_S0_":{"name":"ioError","abstract":"<p>Read/Write error</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError15accessViolationFMS0_S0_":{"name":"accessViolation","abstract":"<p>File permissions error</p>","parent_name":"DBError"},"Enums/DBError.html#/s:FO7BlueJet7DBError5otherFMS0_FT4codeVs5Int32_S0_":{"name":"other","abstract":"<p>Other status code</p>","parent_name":"DBError"},"Enums/DBError.html":{"name":"DBError","abstract":"<p>LMDB-operation Error type</p>"},"Classes/Environment/Configuration.html#/s:vVC7BlueJet11Environment13Configuration5flagsVS0_5Flags":{"name":"flags","abstract":"<p>Set of flags</p>","parent_name":"Configuration"},"Classes/Environment/Configuration.html#/s:vVC7BlueJet11Environment13Configuration10maximumDBsVs6UInt32":{"name":"maximumDBs","abstract":"<p>Maximum number of databases within the environment</p>","parent_name":"Configuration"},"Classes/Environment/Configuration.html#/s:vVC7BlueJet11Environment13Configuration10maxReadersVs6UInt32":{"name":"maxReaders","abstract":"<p>Maximum number of threads/reader slots</p>","parent_name":"Configuration"},"Classes/Environment/Configuration.html#/s:vVC7BlueJet11Environment13Configuration7mapSizeSi":{"name":"mapSize","abstract":"<p>The size of the memory map. The value should be a multiple of the OS page size.</p>","parent_name":"Configuration"},"Classes/Environment/Configuration.html#/s:FVC7BlueJet11Environment13ConfigurationcFT5flagsVS0_5Flags10maximumDBsVs6UInt3210maxReadersS3_7mapSizeSi_S1_":{"name":"init(flags:maximumDBs:maxReaders:mapSize:)","abstract":"<p>Initialise Configuration</p>","parent_name":"Configuration"},"Classes/Environment/Configuration.html#/s:ZvVC7BlueJet11Environment13Configuration7defaultS1_":{"name":"default","abstract":"<p>Default configuration</p>","parent_name":"Configuration"},"Classes/Environment/Flags.html#/s:vVC7BlueJet11Environment5Flags8rawValueVs5Int32":{"name":"rawValue","abstract":"<p>Raw value</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:FVC7BlueJet11Environment5FlagscFT8rawValueVs5Int32_S1_":{"name":"init(rawValue:)","abstract":"<p>Initialise with LMDB</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags8fixedMapS1_":{"name":"fixedMap","abstract":"<p>mmap at a fixed address (experimental)</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags8noSubDirS1_":{"name":"noSubDir","abstract":"<p>no environment directory</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags6noSyncS1_":{"name":"noSync","abstract":"<p>don&rsquo;t fsync after commit</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags8readOnlyS1_":{"name":"readOnly","abstract":"<p>read only</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags10noMetaSyncS1_":{"name":"noMetaSync","abstract":"<p>don&rsquo;t fsync metapage after commit</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags8writeMapS1_":{"name":"writeMap","abstract":"<p>use writable mmap</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags8mapAsyncS1_":{"name":"mapAsync","abstract":"<p>use asynchronous msync when #MDB_WRITEMAP is used</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags5noTLSS1_":{"name":"noTLS","abstract":"<p>tie reader locktable slots to #MDB_txn objects instead of to threads</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags6noLockS1_":{"name":"noLock","abstract":"<p>don&rsquo;t do any locking, caller must manage their own locks</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags11noReadaheadS1_":{"name":"noReadahead","abstract":"<p>don&rsquo;t do readahead (no effect on Windows)</p>","parent_name":"Flags"},"Classes/Environment/Flags.html#/s:ZvVC7BlueJet11Environment5Flags12noMemoryInitS1_":{"name":"noMemoryInit","abstract":"<p>don&rsquo;t initialize malloc&rsquo;d memory before writing to datafile</p>","parent_name":"Flags"},"Classes/Environment/Flags.html":{"name":"Flags","abstract":"<p>Environment flags</p>","parent_name":"Environment"},"Classes/Environment/Configuration.html":{"name":"Configuration","abstract":"<p>Environment configuration</p>","parent_name":"Environment"},"Classes/Environment.html#/s:FC7BlueJet11EnvironmentcFzT4pathSS13configurationVS0_13Configuration_S0_":{"name":"init(path:configuration:)","abstract":"<p>Initialise an Environment with 0 or more databases</p>","parent_name":"Environment"},"Classes/Environment.html#/s:FC7BlueJet11Environment5closeFT_T_":{"name":"close()","abstract":"<p>Close the environment</p>","parent_name":"Environment"},"Classes/Database/PutFlags.html#/s:vVC7BlueJet8Database8PutFlags8rawValueVs5Int32":{"name":"rawValue","abstract":"<p>Raw value</p>","parent_name":"PutFlags"},"Classes/Database/PutFlags.html#/s:FVC7BlueJet8Database8PutFlagscFT8rawValueVs5Int32_S1_":{"name":"init(rawValue:)","abstract":"<p>Initialise with LMDB</p>","parent_name":"PutFlags"},"Classes/Database/PutFlags.html#/s:ZvVC7BlueJet8Database8PutFlags15noDuplicateDataS1_":{"name":"noDuplicateData","abstract":"<p>Dont duplicate key/value pairs</p>","parent_name":"PutFlags"},"Classes/Database/PutFlags.html#/s:ZvVC7BlueJet8Database8PutFlags11noOverwriteS1_":{"name":"noOverwrite","abstract":"<p>Don&rsquo;t override existing value</p>","parent_name":"PutFlags"},"Classes/Database/PutFlags.html#/s:ZvVC7BlueJet8Database8PutFlags7reserveS1_":{"name":"reserve","abstract":"<p>Just reserve space for data, don&rsquo;t copy it. Return a pointer to the reserved space.</p>","parent_name":"PutFlags"},"Classes/Database/PutFlags.html#/s:ZvVC7BlueJet8Database8PutFlags6appendS1_":{"name":"append","abstract":"<p>Data is being appended, don&rsquo;t split full pages</p>","parent_name":"PutFlags"},"Classes/Database/PutFlags.html#/s:ZvVC7BlueJet8Database8PutFlags15appendDuplicateS1_":{"name":"appendDuplicate","abstract":"<p>Duplicate data is being appended, don&rsquo;t split full pages</p>","parent_name":"PutFlags"},"Classes/Database/Flags.html#/s:vVC7BlueJet8Database5Flags8rawValueVs5Int32":{"name":"rawValue","abstract":"<p>Raw value</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:FVC7BlueJet8Database5FlagscFT8rawValueVs5Int32_S1_":{"name":"init(rawValue:)","abstract":"<p>Initialise with LMDB</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags10reverseKeyS1_":{"name":"reverseKey","abstract":"<p>use reverse string keys</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags13duplicateSortS1_":{"name":"duplicateSort","abstract":"<p>use sorted duplicates</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags10integerKeyS1_":{"name":"integerKey","abstract":"<p>numeric keys in native byte order, either unsigned int or #mdb_size</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags14duplicateFixedS1_":{"name":"duplicateFixed","abstract":"<p>with #MDB_DUPSORT, sorted dup items have fixed size</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags16integerDuplicateS1_":{"name":"integerDuplicate","abstract":"<p>with #MDB_DUPSORT, dups are #MDB_INTEGERKEY-style integers</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags16reverseDuplicateS1_":{"name":"reverseDuplicate","abstract":"<p>with #MDB_DUPSORT, use reverse string dups</p>","parent_name":"Flags"},"Classes/Database/Flags.html#/s:ZvVC7BlueJet8Database5Flags6createS1_":{"name":"create","abstract":"<p>create DB if not already existing</p>","parent_name":"Flags"},"Classes/Database/Flags.html":{"name":"Flags","abstract":"<p>Database flags</p>","parent_name":"Database"},"Classes/Database/PutFlags.html":{"name":"PutFlags","abstract":"<p>Flags to specify <code>mdb_put</code> behaviour</p>","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8DatabasecFzT4nameGSqSS_11environmentCS_11Environment5flagsVS0_5Flags_S0_":{"name":"init(name:environment:flags:)","abstract":"<p>Initialise a database</p>","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database5closeFT_T_":{"name":"close()","abstract":"<p>Close the database handle.","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database4syncFzT_T_":{"name":"sync()","abstract":"<p>Sync any in-memory data to the disk.","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database4dropFzT_T_":{"name":"drop()","abstract":"<p>Drop/delete the database</p>","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database5emptyFzT_T_":{"name":"empty()","abstract":"<p>Empty the database</p>","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database3getFzPS_5Slice_GSqV10Foundation4Data_":{"name":"get(_:)","abstract":"<p>Get value for given key</p>","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database3putFzTPS_5Slice_GSqV10Foundation4Data_5flagsVS0_8PutFlags_T_":{"name":"put(_:_:flags:)","abstract":"<p>Put given key/value pair into the database</p>","parent_name":"Database"},"Classes/Database.html#/s:FC7BlueJet8Database6deleteFzPS_5Slice_T_":{"name":"delete(_:)","abstract":"<p>Delete given key/value paid</p>","parent_name":"Database"},"Classes/Database.html#/s:ZFC7BlueJet8Database6createFzT4nameSS11environmentCS_11Environment5flagsVS0_5Flags_S0_":{"name":"create(name:environment:flags:)","abstract":"<p>Create a database within given environment</p>","parent_name":"Database"},"Classes/Database.html":{"name":"Database","abstract":"<p>Database</p>"},"Classes/Environment.html":{"name":"Environment","abstract":"<p>Environment main class</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}